
// Establish version and status
ext.githubProjectName = 'spectator'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'
  apply plugin: 'idea'
  apply plugin: 'me.champeau.gradle.jmh'

  repositories {
    mavenLocal()
    mavenCentral()
  }

  jacoco {
    toolVersion = "0.7.1.201405082137"
  }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {
  group = "com.netflix.${githubProjectName}"

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  tasks.withType(Compile) { 
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" 
  }

  if (System.getProperty("java.version").startsWith("1.8.")) {
    tasks.withType(Javadoc) {
      // http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }

  javadoc {
    options {
      links = ['http://docs.oracle.com/javase/7/docs/api/']
    }
  }

  dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    testCompile 'junit:junit:4.10'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.4.1'
    jmh 'org.slf4j:slf4j-simple:1.7.7'
  }

  jmh {
    warmupIterations = 2
    iterations = 10
    fork = 5
    profilers = ['STACK']
    include '.*'
  }

  jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
      xml.enabled false
      csv.enabled false
      html.destination "${buildDir}/reports/jacoco"
    }
  }

  task copyDepsToBuild << {
    ['compile', 'runtime', 'testCompile', 'testRuntime'].each { conf ->
      delete "${buildDir}/dependencies/${conf}"
      copy {
        from configurations[conf]
        into "${buildDir}/dependencies/${conf}"
      }
    }
  }
}

project(':spectator-api') {

  javadoc {
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    title "Spectator"
  }

  task(checkCompatibility, dependsOn: 'jar', type: JavaExec) {
    // There is probably a better way, but we remove "-SNAPSHOT" from the name if the archive
    // doesn't exist because release plugin changes the name.
    main = 'com.googlecode.japi.checker.cli.Main'
    classpath = files("$projectDir/../codequality/japi-checker-cli-0.2.0-SNAPSHOT.jar")
    args = [
      "$projectDir/../codequality/spectator-api-BASELINE.jar",
      (jar.archivePath.exists())
        ? jar.archivePath.path
        : jar.archivePath.path.replace("-SNAPSHOT", "")
    ]
  }

  build {
    it.dependsOn checkCompatibility
    it.dependsOn licenseMain
    it.dependsOn licenseTest
  }
}

project(':spectator-nflx') {
  dependencies {
    compile project(':spectator-nflx-plugin')
  }
}

project(':spectator-nflx-plugin') {
  dependencies {
    compile project(':spectator-api')
    compile project(':spectator-ext-gc')
    compile project(':spectator-ext-jvm')
    compile project(':spectator-reg-servo')
    compile 'com.netflix.archaius:archaius-core:0.6.3'
    compile 'com.netflix.governator:governator:1.2.20'
    compile 'com.netflix.ribbon:ribbon-transport:2.0-RC9'
  }
}

project(':spectator-ext-gc') {
  dependencies {
    compile project(':spectator-api')
  }
}

project(':spectator-ext-jvm') {
  dependencies {
    compile project(':spectator-api')
  }
}

project(':spectator-ext-sandbox') {
  dependencies {
    compile project(':spectator-api')
  }
}

project(':spectator-reg-servo') {
  dependencies {
    compile project(':spectator-api')
    compile 'com.netflix.servo:servo-core:0.7.9'
    jmh project(':spectator-api')
  }
}

project(':spectator-reg-metrics2') {
  dependencies {
    compile project(':spectator-api')
    compile 'com.yammer.metrics:metrics-core:2.2.0'
    jmh project(':spectator-api')
  }
}

project(':spectator-reg-metrics3') {
  dependencies {
    compile project(':spectator-api')
    compile 'io.dropwizard.metrics:metrics-core:3.1.0'
    jmh project(':spectator-api')
  }
}
